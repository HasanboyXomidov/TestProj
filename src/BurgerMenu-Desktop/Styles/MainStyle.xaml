<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:fa="http://schemas.fontawesome.io/icons/">
    <!-- Start: Pop-up Button Style -->
    <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Pop-up Button Style -->
    
    <!-- fIRST show me button -->
    <Style x:Key="showPasswordCrosButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                    x:Name="B"
                     Background="{DynamicResource RegisterBackgroudnColor}"
                        CornerRadius="50"
                    >
                        <Path Fill="{DynamicResource TextTertiaryColor}" Data="{DynamicResource showPasswordCros}"
                          Height="17"
                          Width="17"
                          Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="showPasswordButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        Background="{DynamicResource RegisterBackgroudnColor}"
                        CornerRadius="50"
                        >
                        <Path Fill="{DynamicResource TextTertiaryColor}" Data="{DynamicResource showPassword}"
                              Height="17"
                              Width="17"
                              Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- fIRST show me button -->

    <!-- Second show me button -->
    <Style x:Key="showPasswordCrosButton2" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                    x:Name="B"
                     Background="{DynamicResource RegisterBackgroudnColor}"
                        CornerRadius="50"
                    >
                        <Path Fill="{DynamicResource TextTertiaryColor}" Data="{DynamicResource showPasswordCros2}"
                          Height="17"
                          Width="17"
                          Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="showPasswordButton2" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        Background="{DynamicResource RegisterBackgroudnColor}"
                        CornerRadius="50"
                        >
                        <Path Fill="{DynamicResource TextTertiaryColor}" Data="{DynamicResource showPassword2}"
                              Height="17"
                              Width="17"
                              Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Second show me button -->
    
    <Style x:Key="SizeButton" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="pictureBorder"                            
                        CornerRadius="15"                                   
                            Background="{DynamicResource PrimaryBackgroundColor}"                                                        
                            BorderThickness="0.5"
                            BorderBrush="Transparent"                                                       
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"                             
                            Margin="{TemplateBinding Margin}">
                        <Label x:Name="smaLbl"                               
                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalAlignment}"
                               
                               FontSize="16"
                               Foreground="{DynamicResource FourthIconColor}"
                               Content="{TemplateBinding Content}">
                        </Label>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <!--<Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>-->
                            <!--<Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource ButtonHoverGreyColor}"/>
                            <Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>  
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pictureBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="MainBigAddTocarButton" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="pictureBorder"
                        CornerRadius="25"                                   
                            Background="{DynamicResource FourthIconColor}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            BorderThickness="0.5"
                            BorderBrush="Transparent"                                                       
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"                             
                            Margin="{TemplateBinding Margin}"
                            >
                        <Label x:Name="smaLbl"                               
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               FontSize="16"
                               Foreground="{DynamicResource PrimaryBackgroundColor}"
                               Content="{TemplateBinding Content}">
                        </Label>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <!--<Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>-->
                            <!--<Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource ButtonHoverGreyColor}"/>
                            <Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pictureBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    


    <Style x:Key="PlusMinusBtn" TargetType="Button">
        <Setter Property="Template">
            
            
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="pictureBorder"
                            
                        CornerRadius="25"              
                            BorderThickness="0.5"
                            BorderBrush="{TemplateBinding BorderBrush}"                                                       
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"                        
                            HorizontalAlignment="Center"                                                       
                            Background="{TemplateBinding Background}"
                            >
                        <Image Source="{TemplateBinding Tag}"
                               HorizontalAlignment="Center"
                               Width="15"
                               Height="15"
                               />
                        
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Cursor" Value="Hand" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TextTertiaryColor}" TargetName="pictureBorder"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <!--<Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>-->
                            <!--<Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource ButtonHoverGreyColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    
    <!-- MenWomenKidsSorterSwitch RadioButton-->
    <Style x:Key="MenWomenKidsSorterSwitch"
           TargetType="{x:Type RadioButton}">

        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Cascadia Mono"/>
        <Setter Property="Margin" Value="0 2 0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <Border x:Name="AllBack" Width="150">

                        <Grid Margin="30 0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock 
                                       x:Name="textBlock"
                                       Foreground="{DynamicResource FourthIconColor}"
                                       FontWeight="SemiBold"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontSize="16"
                                       FontFamily="s"
                                       Margin="0 0 0 0"
                                       Text="{TemplateBinding Content}"/>

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="AllBack"/>
                            <Setter Property="Foreground" Value="{DynamicResource FourthIconColor}" TargetName="textBlock"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="textBlock" Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="AllBack" Property="Background" Value="{DynamicResource FourthIconColor}"/>
                            <Setter TargetName="AllBack" Property="CornerRadius" Value="25"/>
                            <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <!-- MenWomenKidsSorterSwitch RadioButton-->
    
    
    <!-- Switch Button-->
    <Style x:Key="SwitchButton" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel>
                        <Grid>
                            <Border x:Name="backgr"
                                    Width="30"
                                    Height="20"
                                    Background="#edf6f9"
                                    CornerRadius="10" 
                                    Margin="0"/>
                            <Border x:Name="button"
                                    Height="20"
                                    Width="20"
                                    CornerRadius="12.5"
                                    HorizontalAlignment="Left"/>
                        </Grid>
                        <ContentPresenter x:Name="content"
                                          Margin="10 0 0 0"
                                          Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center"/>
                    </StackPanel>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="right">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                Storyboard.TargetName="button"
                                                Duration="0:0:0:0.5"
                                                From="0,0,0,0"
                                                To="10,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut">
                                    </CircleEase>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                        <Storyboard x:Key="left">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                Storyboard.TargetName="button"
                                                Duration="0:0:0:0.5"
                                                From="10,0,0,0"
                                                To="0,0,0,0">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut">
                                    </CircleEase>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="leftt"/>
                                <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="button"
                                    Property="Background"
                                    Value="#fff9f4f4"/>
                            <Setter TargetName="backgr"
                                    Property="Background"
                                    Value="#f3b634"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="rightt"/>
                                <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="button" Property="Background" Value="#fefce8"/>
                            <Setter TargetName="backgr" Property="Background" Value="#e3ffe6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Switch Button-->

    <Style x:Key="SaveBtn" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid >

                        <!-- Button -->
                        <Border x:Name="pictureBorder"
                                Padding="0"
                            CornerRadius="8"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            HorizontalAlignment="Center"
                            Background="{TemplateBinding Background}">
                            <Label x:Name="smaLbl"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               FontSize="16"
                                   
                               Foreground="{TemplateBinding Foreground}"
                               Content="{TemplateBinding Content}">
                            </Label>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Your existing triggers -->

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pictureBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}" />
                        </Trigger>

                        <!-- Trigger to show/hide the spinner based on button state -->
                        <Trigger Property="IsEnabled" Value="False">
                            
                            <Setter TargetName="pictureBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="pictureBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CategoryMens Button-->
    <Style x:Key="CategoryMensbtn" TargetType="Button">
        <Setter Property="Height" Value="250"/>
        <Setter Property="Width" Value="380"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="categoryBorder"
                            Background="{DynamicResource MainBannerGreen}"
                            CornerRadius="15"              
                            BorderThickness="2"
                            BorderBrush="Transparent"                                                       
                            >
                        <Grid x:Name="categoryGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Label x:Name="Menslbl"                               
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               FontSize="25"
                               Foreground="{DynamicResource SecundaryBackgroundColor}"                               
                               Content="{TemplateBinding Content}"
                                       Margin="0 150 0 0"
                                       >
                                </Label>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="See Products"
                                           x:Name="CategoryNamelbl"
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="58 0 0 0"
                                       Foreground="{DynamicResource TextTertiaryColor}"
                                       
                                       >
                                    </Label>
                                    <Path x:Name="icon"                                  
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Height="20" Width="20"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  
                                  Fill="{DynamicResource TextTertiaryColor}"                                  
                                  Stretch="Uniform"/>
                                </StackPanel>
                            </StackPanel>
                            <Border Grid.Column="1" CornerRadius="0 15 15 0"                                             
                                    >
                                <Border.Background>
                                    <ImageBrush ImageSource="/assets/staticimages/MensCategory.png"/>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="CategoryNamelbl" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">


                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CategoryMens Button-->

    <!-- CategoryWomens Button-->
    <Style x:Key="CategoryWomens" TargetType="Button">
        <Setter Property="Height" Value="250"/>
        <Setter Property="Width" Value="380"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="categoryBorder"
                            Background="{DynamicResource MainBannerRed}"
                            CornerRadius="15"              
                            BorderThickness="2"
                            BorderBrush="Transparent"                                                       
                            
                            >
                        <Grid x:Name="categoryGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Label x:Name="Menslbl"                               
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               FontSize="25"
                               Foreground="{DynamicResource SecundaryBackgroundColor}"                               
                               Content="{TemplateBinding Content}"
                                       Margin="0 150 0 0"
                                       >
                                </Label>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="See Products"
                                           x:Name="CategoryNamelbl"
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="58 0 0 0"
                                       Foreground="{DynamicResource TextTertiaryColor}"
                                       
                                       >
                                    </Label>
                                    <Path x:Name="icon"                                  
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Height="20" Width="20"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  
                                  Fill="{DynamicResource TextTertiaryColor}"                                  
                                  Stretch="Uniform"/>
                                </StackPanel>
                            </StackPanel>
                            <Border Grid.Column="1" CornerRadius="0 15 15 0"                                             
                                    >
                                <Border.Background>
                                    <ImageBrush ImageSource="/assets/staticimages/wepik-export-20230809182056drVe.png"/>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="CategoryNamelbl" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">


                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CategoryWomens Button-->

    <!-- CategoryKids Button-->
    <Style x:Key="CategoryKidsbtn" TargetType="Button">
        <Setter Property="Height" Value="250"/>
        <Setter Property="Width" Value="380"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="categoryBorder"
                            Background="{DynamicResource MainBannerYellow}"
                            CornerRadius="15"              
                            BorderThickness="2"
                            BorderBrush="Transparent"                                                       
                            
                            >
                        <Grid x:Name="categoryGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0">
                                <Label x:Name="Menslbl"                               
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               FontSize="25"
                               Foreground="{DynamicResource SecundaryBackgroundColor}"                               
                               Content="{TemplateBinding Content}"
                                       Margin="0 150 0 0"
                                       >
                                </Label>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="See Products"
                                           x:Name="CategoryNamelbl"
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="58 0 0 0"
                                       Foreground="{DynamicResource TextTertiaryColor}"
                                       
                                       >
                                    </Label>
                                    <Path x:Name="icon"                                  
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Height="20" Width="20"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  
                                  Fill="{DynamicResource TextTertiaryColor}"                                  
                                  Stretch="Uniform"/>
                                </StackPanel>
                            </StackPanel>
                            <Border Grid.Column="1" CornerRadius="0 15 15 0"                                             
                                    >
                                <Border.Background>
                                    <ImageBrush ImageSource="/assets/staticimages/pexels-victoria-rain-1620760.jpg"/>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="categoryBorder" Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter TargetName="CategoryNamelbl" Property="Foreground" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">


                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="categoryBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CategoryKids Button-->

    <!-- Color Clothe Button-->
    <Style x:Key="ColorClothes" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" CornerRadius="50" 
                            Width="35"
                            Height="35"
                            Background="{TemplateBinding Background}"
                            BorderThickness="3"
                            BorderBrush="Transparent"
                            >

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Color Clothe Button-->

    <!-- Add to Cart Button-->

    <Style x:Key="NewItemsComponentsButton" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="pictureBorder"
                        CornerRadius="20"              
                            BorderThickness="2"
                            BorderBrush="Transparent"                                                       
                            Height="40"
                            Width="200"                        
                            Margin="0 210 0 0"
                            >
                        <Label x:Name="smaLbl"                               
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               FontSize="16"
                               Foreground="{DynamicResource }"
                               Content="{TemplateBinding Content}">
                        </Label>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            <Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="pictureBorder" Property="Background" Value="{DynamicResource ButtonHoverGreyColor}"/>
                            <Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pictureBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   


    <!-- Show Me All Button-->
    <Style x:Key="ShowMeAllButton" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="smaborder"
                        CornerRadius="15"                            
                            BorderThickness="2"
                            BorderBrush="Transparent"
                            Height="35"
                            Width="100"
                            HorizontalAlignment="Center"
                            Margin="0 35 55 0"
                            >
                        <Label x:Name="smaLbl"
                               
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontWeight="SemiBold"
                               
                               Content="Show me all">
                        </Label>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="smaborder" Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="smaborder" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            <Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="smaborder" Property="Background" Value="{DynamicResource ButtonHoverGreyColor}"/>
                            <Setter TargetName="smaLbl" Property="Foreground" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="smaborder" Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Show Me All Button-->

    <!-- Main Static Three Buttons -->
    <Style x:Key="MainThreeStaticButoons" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                        CornerRadius="25"                            
                        BorderThickness="0"
                        Background="Transparent"
                            >
                        
                            <Border Width="35" Height="35"
                                HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                
                                >
                                <!--<Path x:Name="icon"                                  
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"                                  
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{DynamicResource FourthIconColor}"                                  
                                  Stretch="Uniform"/>-->
                                <Border.Background>
                                    <ImageBrush ImageSource="/Assets/StaticImages/649931-removebg-preview.png"
                                            Stretch="Uniform"/>
                                </Border.Background>
                            </Border>
                            
                        

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Cursor" Value="Hand" />
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ThirdBackgroundColor}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource SecundaryBackgroundColor}"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Main Static Three Buttons -->


    <!-- goBack Button -->
    <Style x:Key="GoBackButton" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                        CornerRadius="25"                            
                        BorderThickness="0"
                        Background="Transparent"
                            >

                        <Border Width="35" Height="35"
                                HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                
                                >
                            <Border.Background>
                                <ImageBrush ImageSource="/Assets/StaticImages/left.png"
                                            Stretch="Uniform"/>
                            </Border.Background>
                        </Border>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Cursor" Value="Hand" />
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource ButtonHoverGreyColor}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource SecundaryBackgroundColor}"/>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- goBack Button -->


    <!-- Menu RadioButton -->
    <!--Menu Buttons-->

    <Style x:Key="MenuButton2"
       TargetType="{x:Type RadioButton}">

        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Cascadia Mono"/>
        <Setter Property="Margin" Value="0 2 0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border Background="Transparent"
                Cursor="Hand"
                Width="250"
                Height="55"
                x:Name="myBorder"
                >
                            <StackPanel Orientation="Horizontal">
                                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>-->
                                <Border Grid.Column="0"
                        Width="45"
                        Height="45"
                        Margin="10 0"
                        CornerRadius="50"
                        Background="White">
                                </Border>
                                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            Margin="10 5 5 5">
                                    <Label VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           FontSize="16"
                           MaxWidth="120"
                           Foreground="{DynamicResource PrimaryBackgroundColor}"
                           Padding="0"
                           x:Name="lblUserName"
                          
                           >
                                        Hasanboy Xomidov Dilmurod o'gli
                                    </Label>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <!--<Setter Property="Background" Value="Transparent" TargetName="AllBack"/>-->

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="AllBack" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            <Setter TargetName="AllBack" Property="CornerRadius" Value="25"/>
                            <Setter TargetName="AllBack" Property="Cursor" Value="Hand"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter TargetName="AllBack" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            <Setter TargetName="AllBack" Property="CornerRadius" Value="25"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="MenuButton"
           TargetType="{x:Type RadioButton}">

        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="210"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Cascadia Mono"/>
        <Setter Property="Margin" Value="0 2 0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <Border x:Name="AllBack" CornerRadius="0" Width="200"
                            Margin="0"
                            BorderBrush="{DynamicResource TextTertiaryColor}">

                        <Grid Margin="0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                           
                            <Path Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Fill="{DynamicResource TextTertiaryColor}" 
                                  Stretch="Uniform"
                                  Margin="10 0 0 0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Height="20" Width="20"                                  
                                  />

                          

                            <TextBlock Grid.Column="2"
                                       
                                       x:Name="textBlock"
                                       Foreground="{DynamicResource FourthIconColor}"
                                       FontWeight="SemiBold"
                                       VerticalAlignment="Center"
                                       FontSize="16"
                                       FontFamily="s"
                                       Margin="25 0 0 0"
                                       Text="{TemplateBinding Content}"/>

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="AllBack"/>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AllBack" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            <Setter TargetName="AllBack" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="AllBack" Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="AllBack" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            <Setter TargetName="AllBack" Property="CornerRadius" Value="5"/>
                            <!--<Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!-- Menu RadioButton -->
    
    
    <!-- Menu MenuStaticButtons-->
    <Style x:Key="MenuStaticButton"
       TargetType="{x:Type Button}">

        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="210"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Cascadia Mono"/>
        <Setter Property="Margin" Value="0 2 0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="AllBack" CornerRadius="8" Width="200"
                        Margin="0"
                            Background="{DynamicResource PrimaryBackgroundColor}"                            
                        BorderBrush="{DynamicResource TextTertiaryColor}">

                        <Grid Margin="0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Path Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                              Fill="{DynamicResource TextTertiaryColor}" 
                              Stretch="Uniform"
                              Margin="10 0 0 0"
                              x:Name="staticIcon"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Height="20" Width="20"                                  
                              />



                            <TextBlock Grid.Column="2"
                                   
                                   x:Name="textBlock"
                                   Foreground="{DynamicResource FourthIconColor}"
                                   FontWeight="SemiBold"
                                   VerticalAlignment="Center"
                                   FontSize="16"
                                   FontFamily="s"
                                   Margin="25 0 0 0"
                                   Text="{TemplateBinding Content}"/>

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">

                            <Setter TargetName="AllBack" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                            <Setter TargetName="AllBack" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}" />

                            <Setter  TargetName="staticIcon" Property="Fill" Value="{DynamicResource TextTertiaryColor}"/>
                        </Trigger>
                       
                      
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!-- Menu MenuStaticButtons-->
    

        



    <!-- Start: iToggleButton Style -->
    <Style x:Key="iToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Viewbox Height="30" Width="30" Margin="0 6 0 0" Stretch="UniformToFill">
                            <Canvas Height="512" Width="512">
                                <Path Data="m32 0h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource TextTertiaryColor}" Margin="0 0 0 0"/>
                                <Path Data="m32 128h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource TextTertiaryColor}" Margin="0 20 0 0"/>
                                <Path Data="m32 256h448c17.671875 0 32 14.328125 32 32s-14.328125 32-32 32h-448c-17.671875 0-32-14.328125-32-32s14.328125-32 32-32zm0 0" Fill="{DynamicResource TextTertiaryColor}" Margin="0 40 0 0"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="Transparent"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background"
                                        TargetName="border"
                                        Value="Transparent"/>
                            <Setter Property="BorderBrush"
                                        TargetName="border"
                                       Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: iToggleButton Style -->

    <!-- Start: Button Close | Restore | Minimize -->
    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{DynamicResource PrimaryTextColor}" Height="10" Width="10" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource SecundaryBackgroundColor}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource btnClose}"/>
                            <!--<Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTexColor}"/>-->
                        </MultiTrigger>
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource PrimaryTexColor}"/>
                        </Trigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button Close | Restore | Minimize -->

    
    <Style x:Key="minMax"
           TargetType="{x:Type RadioButton}">

        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Cascadia Mono"/>
        <Setter Property="Margin" Value="0 2 0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <Border x:Name="AllBack" Width="150">

                        <Grid Margin="30 0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock 
                                       x:Name="textBlock"
                                       Foreground="{DynamicResource FourthIconColor}"
                                       FontWeight="SemiBold"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontSize="16"
                                       FontFamily="s"
                                       Margin="0 0 0 0"
                                       Text="{TemplateBinding Content}"/>

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="AllBack"/>
                            <Setter Property="Foreground" Value="{DynamicResource FourthIconColor}" TargetName="textBlock"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="textBlock" Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="AllBack" Property="Background" Value="{DynamicResource FourthIconColor}"/>
                            <Setter TargetName="AllBack" Property="CornerRadius" Value="25"/>
                            <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource PrimaryBackgroundColor}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>